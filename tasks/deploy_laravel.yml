- name: Ensure project directory is exist
  ansible.builtin.file:
    path: "/home/{{ php_user }}/.ssh"
    state: directory
    mode: '0700'

- name: Copy private key to server
  ansible.builtin.copy:
    src: "{{ git_private_key }}"
    dest: "/home/{{ php_user }}/.ssh/id_app"
    owner: "{{ php_user }}"
    group: "{{ php_user }}"
    mode: "0600"

- name: Ensure project directory is exist
  ansible.builtin.file:
    path: "{{ project_path }}"
    state: directory
    mode: '0755'

- name: Clone Laravel repository
  ansible.builtin.git:
    repo: "{{ git_repo }}"
    dest: "{{ project_path }}"
    version: "{{ git_branch }}"
    single_branch: true
    key_file: /home/{{ php_user }}/.ssh/id_app
    accept_hostkey: true

- name: Copy .env.example to .env
  ansible.builtin.copy:
    src: "{{ project_path }}/.env.example"
    dest: "{{ project_path }}/.env"
    remote_src: true
    mode: "0644"
    force: false

- name: Edit .env with the correct value
  ansible.builtin.lineinfile:
    dest: "{{ project_path }}/.env"
    state: present
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  with_items:
    - { regexp: '^DB_HOST', line: 'DB_HOST=127.0.0.1'}
    - { regexp: '^DB_DATABASE', line: 'DB_DATABASE={{ mariadb.db_name }}'}
    - { regexp: '^DB_USERNAME', line: 'DB_USERNAME={{ mariadb.db_user }}'}
    - { regexp: '^DB_PASSWORD', line: 'DB_PASSWORD={{ mariadb.db_pass }}'}

- name: Install Laravel dependencies
  ansible.builtin.command:
    cmd: composer install
  args:
    chdir: "{{ project_path }}"
  register: composer_output
  changed_when: composer_output.rc != 0

- name: Running Migrations
  ansible.builtin.command:
    cmd: php artisan migrate
  args:
    chdir: "{{ project_path }}"
  register: migrate_output
  changed_when: migrate_output.rc != 0

- name: Generate application key
  ansible.builtin.command: php artisan key:generate
  args:
    chdir: "{{ project_path }}"
  register: key_output
  changed_when: key_output.rc != 0
